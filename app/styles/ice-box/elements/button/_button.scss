/*
Button

Buttons to use throughout the app.

Markup:
<button class="{{modifier_class}}">Button</button>

.button-default - Default button.
.button-primary - Primary action button.

Styleguide Ice Box - Elements - Button
*/

// Core Button CSS
// -----------------------------------------------------------------------------

@import 'button_functions';
@import 'button_mixins';
@import 'button_variables';

// Core Button
// -----------------------------------------------------------------------------
//

// Button placeholder used to create button types
%button {
  @include reset-button();
  user-select: none;
  touch-action: manipulation;
  cursor: pointer;

  // Text formatting
  color: $button-base-color;
  font-family: $button-font-family;
  font-size: $button-font-size;
  font-weight: $button-font-weight;
  text-align: center;
  white-space: nowrap;

  // Buttons now have a specific height for enforced uniformity
  height: $button-height;
  vertical-align: middle;
  min-width: $button-min-width;
  padding-left: $button-spacing-horizontal;
  padding-right: $button-spacing-horizontal;

  // Border placeholder maintains consistent spacing around all buttons with or without borders
  border: $button-border-width solid transparent;
  border-radius: $button-border-radius;

  transition: background-color $button-transition-speed ease-in-out, border-color $button-transition-speed ease-in-out;

  // Hover state
  &:hover {
    color: ice-adjust-color($button-base-color, $button-hover-color-inc);
  }

  // Active/Pressed state
  &:active,
  &.is-active,
  &.active, // TODO: see if we can get ember to use is-active instead
  .open &.dropdown-toggle { // TODO: remove dropdown-toggle after dropdown refactor {
    color: ice-adjust-color($button-base-color,  -$button-pressed-color-inc);
  }

  &:focus {
    // Makes the focus outline slightly less obstrusive
    outline-offset: $button-focus-outline-offset;
    // Make outline more appealing to the eye
    outline-color: #cfcfcf;
  }

  // Disabled state
  &[disabled],
  fieldset[disabled] & { // we may decide to change fieldset to a class later on
    @include disabled-input();
    color: ice-adjust-color($button-base-color,  $button-disabled-color-inc);
  }

  // If button is tied to a dropdown that's open,
  // don't display outline, display hover color instead
  // TODO: remove after dropdown refactor
  .open &.dropdown-toggle:focus,
  .open &[data-toggle='dropdown']:focus {
    outline: none;
    color: $button-icon-hover-color;
  }
}

// Technically we don't allow buttons to be anything other than a button element,
// however for file uploads we have to use the label element
label[class^='button-'] {
  line-height: $button-height;
  min-width: min-content;
}

// Button types
// -----------------------------------------------------------------------------
//

// Basic Button types
// -------------------------

// Plain button (that should always have an icon to indicate that it is a button)
.button-text {
  @extend %button;
}

// Default button - use in most cases
.button-default {
  @extend %button;
  @include button-type($button-default-color, $button-default-bg-color, $button-default-border-color);
}

// Primary button - use for primary action in flow
.button-primary {
  @extend %button;
  @include button-type($button-primary-color, $button-primary-bg-color, $button-primary-border-color);
}

// Danger button - use to warn user of negative action, such as delete
.button-danger {
  @extend %button;
  @include button-type($button-danger-color, $button-danger-bg-color, $button-danger-border-color);
}

// Link button - a button that looks like a link
.button-link {
  @extend %button;
  @include button-type($text-link, transparent, transparent);

  &:not(:hover) {
    text-decoration: underline;
  }
}

// NOTE: this is new variant to replace the btn-dashed utility.
// Since in all the uses we only have it on btn-default, it makes sense to extend
// that style and tie them permanently
// This may be removed later if we decide we don't need it
.button-select {
  @extend .button-default;
  border-style: dashed;
}


// Icon Button
// -----------------------
// All this class does is set the colors for icons and evenly distribute the spacing

.button-icon {
  @extend %button;
  color: $button-icon-color;
  padding: 0;
  width: $button-icon-size;
  min-width: $button-icon-size;

  &:hover,
  &:active,
  &.is-active,
  &.active,
  .open &.dropdown-toggle {
    border-color: $button-icon-hover-border;
  }

  // Have to adjust the pressed background color for default button since
  // its a bit too light
  &:active,
  &.is-active,
  &.active,
  .open &.dropdown-toggle {
    background-color: ice-adjust-color($button-default-bg-color, -0.5);
  }

  // Sometimes the icon buttons will have images rather than font awesome icons,
  // so we need to use opacity for the hover effect
  img {
    transition: opacity $button-icon-transition-duration ease-out;
    opacity: $button-icon-img-opacity;
    height: $button-icon-img-size;
  }

  &:hover img,
  &.is-active img,
  &.active img {
    opacity: 1;
  }

}

// Groups of Buttons
// -----------------------------------------------------------------------------
// Container for buttons that should be flush next to each other
// Formerly btn-group

.button-flush-group {
  display: flex;
  flex-wrap: wrap;

  [class^='button-'] {
    & + [class^='button-'] {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      // We use the overlapping border method rather than removing the border
      // because it can get in a weird state when there are disabled/active
      // buttons in the group
      margin-left: -1px;
    }

    &:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    // Makes border go under active button borders
    &[disabled] {
      z-index: -1;
    }
  }
}

// Utilities
// -----------------------------------------------------------------------------
//

// Button Sizes
// --------------------------------------------------

// These can be used as utility classes in generic cases where it makes sense,
// but we should try to use these with extends when possible
.button-large {
  height: $button-large-height;
  padding-right: $button-large-spacing-horizontal;
  padding-left: $button-large-spacing-horizontal;
  min-width: $button-large-min-width;
}
